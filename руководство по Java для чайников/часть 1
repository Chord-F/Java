                                                                 руководство по Java для чайников
                                                                           часть 1                                               


                                                                          by Chord_F
*- название блока/мини функции и тд и тп
#- заметки и пояснения
*словарь 
JVM (Java Virtual Machine) — виртуальная машина, которая выполняет байт-код Java-программ.
 Это основная часть исполняющей системы Java — Java Runtime Environment (JRE)

Фреймворк (англ. framework — «каркас, структура») — это готовый набор инструментов, 
который помогает разработчику быстро создать продукт.Например движок ,готовые программы

frontend- то часть веб-приложения, с которой пользователь взаимодействует напрямую. 
Это визуальный интерфейс: кнопки, формы, меню, анимации

Backend — это часть веб-приложения,
которая скрыта от пользователя и обеспечивает логику работы,
обработку данных и взаимодействие с базами данных,используется на северах

Транспиляция- перевод из одного языка программирования в другой 

компиляция - перевод код языка программирования в машинный или байт код

Левоассоциативные операторы, которые выполняются слева направо

Правоассоциативные операторы, которые выполняются справа налевo


*начало проекта
public class DDD {
    public static  void  main(String[] args) {}
# DDD это самая главная папка ,ну или название проекта
#в фигурных скобках хранятся блоки кода 
*принт
public class DDD {
	public sattis void(Srting[] args){
 System.out.println("Hello ideot!");
 System.out.println('n');
}}
#мы вызываем систему ,далее мы обращаемся к выводу(выводу соопщения)
дальше указываем тип нашего вывода,Потом просто пишем ,что хотим вывести.
*кавычки имеют значение
"" - хранят строку(нет огранечения по символам)
'' - могут зранить только одно значение
*типы вывода print
println - выводит значение на следуйщей строке
print - выводит значениев на одной и той же строке 
printf - функция для форматированного вывода
%x: для вывода шестнадцатеричных чисел

%f: для вывода чисел с плавающей точкой

%e: для вывода чисел в экспоненциальной форме, например, 1.3e+01

%c: для вывода одиночного символа

%s: для вывода строковых значений
*коментарии 
//   - однострочные комментарии
/*  */ - многострочные комментарии
  
                        типы переменных в java
1) целые числа (byte, short, int, long);
byte - 8 битновый тип.хранит значение от -127 до 128
shot - 16 юитовый тип. может хранить значения от -32768 до 32767
int  - 32 битовый тип. может хранить значения от -2147483648 до 2147483647.
long - 64 битовый тип.может хранить значения от -9223372036854775808 до 9223372036854775807. 

2) числа с плавающей точкой (float, double);
float - 32-битное число с плавающей точкой,
Диапазон значений — от  1.4e-45 до 3.4e+38,7–8 знаков после запятой

double -64-битное число с плавающей точкой,Диапазон значений — от 
4.9e-324 до 1.8e+308,около 15–16 знаков после запятой

3) логический (boolean);
хранит True и False

4) символьный (char)
хранит любой символ,но только один

5) строка (String)
хранит любые значения

*ключевое слово var
#ключевое слово var может определять тип переменной
var x = 32
#начит переменной по умолчанию будет присвоен тип int
*константы
#константе в отличие от переменной можно присвоить
значение только один раз.Обьявляется константа так же,как и переменная,
но в начале нужно добавить ключевое слово final
то есть если мы напишем:
final int n = 65
System.out.print(b)
то n = 55 мы написать не сможем ,потому что это константа

*тип переменной string
String b = "I'm a fucker, but maybe smart ";
# в типе переменной String можно писать всё,
что угодно(цифры,буквы,любые символы),но их нельхя складывать в нашем привычном понимании.
они складываются так :
например String b = "1";
         System.out.println(b + b);
и конечный результат будет 11 ,а не 2
*импорт инпута
import java.util.Scanner;
*инпут
Scanner b = new Scanner(System.in);
var n = b.nextLine()
*Логические операции
|

c=a|b; (c равно true, если либо a, либо b (либо и a, и b) равны true, иначе c будет равно false)

&

c=a&b; (c равно true, если и a, и b равны true, иначе c будет равно false)

!

c=!b; (c равно true, если b равно false, иначе c будет равно false)

^

c=a^b; (c равно true, если либо a, либо b (но не одновременно) равны true, иначе c будет равно false)

||

c=a||b; (c равно true, если либо a, либо b (либо и a, и b) равны true, иначе c будет равно false)

&&

c=a&&b; (c равно true, если и a, и b равны true, иначе c будет равно false)

&& и &     || и |  
#ничеми не отличается ,но второй вариант используется в алгебраических  вычеслениях,
а первый в джава

*блок If
if (v == b) 
            System.out.println("Hello ideot!");
        }
        else {
            System.out.println("Hello eblan!");
        }

 
